{"version":3,"sources":["tempList.js","tempDetails.js","components/RecipeDetails.js","components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","App.js","serviceWorker.js","index.js"],"names":["recipes","publisher","f2f_url","title","source_url","recipe_id","image_url","social_rank","publisher_url","recipe","ingredients","RecipeDetails","state","id","this","props","url","fetch","data","json","jsonData","setState","console","log","_context","t0","_this2","_this$state$recipe","react_default","a","createElement","Fragment","className","onClick","handleIndex","type","src","alt","href","target","rel","map","item","index","key","Component","Recipe","_this","_this$props$recipe","style","height","handleDetails","RecipeSearch","_this$props","value","handleChange","handleSubmit","onSubmit","htmlFor","name","placeholder","onChange","RecipeList","error","RecipeSearch_RecipeSearch","Recipe_Recipe","App","base_url","details_id","pageIndex","search","query","displayPage","RecipeList_RecipeList","RecipeDetails_RecipeDetails","e","preventDefault","_this$state","concat","getRecipes","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ccb56c2.chunk.js","sourcesContent":["export const recipes = [\r\n  {\r\n    publisher: \"Closet Cooking\",\r\n    f2f_url: \"http://food2fork.com/view/35382\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\r\n    recipe_id: \"35382\",\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    social_rank: 100.0,\r\n    publisher_url: \"http://closetcooking.com\"\r\n  },\r\n  {\r\n    publisher: \"The Pioneer Woman\",\r\n    f2f_url: \"http://food2fork.com/view/47024\",\r\n    title: \"Perfect Iced Coffee\",\r\n    source_url:\r\n      \"http://thepioneerwoman.com/cooking/2011/06/perfect-iced-coffee/\",\r\n    recipe_id: \"47024\",\r\n    image_url: \"http://static.food2fork.com/icedcoffee5766.jpg\",\r\n    social_rank: 100.0,\r\n    publisher_url: \"http://thepioneerwoman.com\"\r\n  },\r\n  {\r\n    publisher: \"The Pioneer Woman\",\r\n    f2f_url: \"http://food2fork.com/view/47319\",\r\n    title: \"Crash Hot Potatoes\",\r\n    source_url:\r\n      \"http://thepioneerwoman.com/cooking/2008/06/crash-hot-potatoes/\",\r\n    recipe_id: \"47319\",\r\n    image_url: \"http://static.food2fork.com/CrashHotPotatoes5736.jpg\",\r\n    social_rank: 100.0,\r\n    publisher_url: \"http://thepioneerwoman.com\"\r\n  }\r\n];\r\n","export const recipe = {\r\n  f2f_url:\"http://food2fork.com/view/3582\",\r\n  image_url: \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n  ingredients: [\r\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\r\n    \"2 slices sour dough bread\",\r\n    \"1 tablespoon butter, room temperature\",\r\n    \"2 tablespoons cream cheese, room temperature\",\r\n    \"1/2 cup jack and cheddar cheese, shredded\",\r\n    \"1 tablespoon tortilla chips, crumbled\"\r\n  ],\r\n  publisher: \"Closet Cooking\",\r\n  publisher_url: \"http://closetcooking.com\",\r\n  source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\r\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"    \r\n};\r\n","import React, { Component } from \"react\";\r\nimport { recipe } from \"./../tempDetails\";\r\n\r\nexport default class RecipeDetails extends Component {\r\n  //  constructor(props) {\r\n  //    super(props);\r\n  //    this.state = {\r\n  //      recipe: recipe,\r\n  //      url: `https://www.food2fork.com/api/get?key=f0e5a65f8013a6dd9139e7b0037969fa&rId=${\r\n  //        this.props.id\r\n  //      }`\r\n  //    };\r\n  //  }\r\n\r\n  //  async componentDidMount() {\r\n  //    try {\r\n  //      const data = await fetch(this.state.url);\r\n  //      const jsonData = await data.json();\r\n  //      this.setState({\r\n  //        recipe: jsonData.recipe\r\n  //      });\r\n  //    } catch (error) {\r\n  //      console.log(error);\r\n  //    }\r\n  //  }\r\n  state = {\r\n    recipe: recipe\r\n  };\r\n  async componentDidMount() {\r\n    const id = this.props.id;\r\n    const url = `https://www.food2fork.com/api/get?key=f0e5a65f8013a6dd9139e7b0037969fa&rId=${id}`;\r\n    try {\r\n      const data = await fetch(url);\r\n      const jsonData = await data.json();\r\n      this.setState({\r\n        recipe: jsonData.recipe\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      image_url,\r\n      publisher,\r\n      publisher_url,\r\n      source_url,\r\n      title,\r\n      ingredients\r\n    } = this.state.recipe;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n              <button\r\n                onClick={() => this.props.handleIndex(1)}\r\n                type=\"button\"\r\n                className=\"btn btn-warning mb-5 text-capitalize\"\r\n              >\r\n                back to recipe list\r\n              </button>\r\n              <img src={image_url} className=\"d-block w-100\" alt=\"recipe\" />\r\n            </div>\r\n            {/* details */}\r\n            <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n              <h6 className=\"text-uppercase text-center\">{title}</h6>\r\n              <h6 className=\"text-warning text-capitalize text-slanted\">\r\n                provided by {publisher}\r\n              </h6>\r\n              <a\r\n                href={publisher_url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary mt-2 text-capitalize\"\r\n              >\r\n                publisher webpage\r\n              </a>\r\n              <a\r\n                href={source_url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-success mt-2 mx-3 text-capitalize\"\r\n              >\r\n                recipe url\r\n              </a>\r\n              <ul className=\"list-group mt-4\">\r\n                <h2 className=\"mt-3 mb-4\">Ingredients</h2>\r\n                {ingredients.map((item, index) => {\r\n                  return (\r\n                    <li key={index} className=\"list-group-item text-slanted\">\r\n                      {item}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Recipe extends Component {\r\n  render() {\r\n    const {\r\n      publisher,\r\n      image_url,\r\n      source_url,\r\n      title,\r\n      recipe_id\r\n    } = this.props.recipe;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n          <div className=\"card\">\r\n            <img\r\n              src={image_url}\r\n              className=\"img-card-top\"\r\n              style={{ height: \"14rem\" }}\r\n              alt=\"recipe\"\r\n            />\r\n            <div className=\"card-body text-capitalize\">\r\n              <h6>{title}</h6>\r\n              <h6 className=\"text-warning text-slanted\">\r\n                provided by {publisher}\r\n              </h6>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <button\r\n                onClick={() => this.props.handleDetails(0, recipe_id)}\r\n                type=\"button\"\r\n                className=\"btn btn-primary text-capitalize\"\r\n              >\r\n                details\r\n              </button>\r\n              <a\r\n                href={source_url}\r\n                className=\"btn btn-success mx-2 text-capitalize\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                recipe url\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class RecipeSearch extends Component {\r\n  render() {\r\n    const { value, handleChange, handleSubmit } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto col-md-8 mt-5 text\">\r\n              <h1 className=\"text-slanted text-capitalize\">\r\n                Search for recipe with{\" \"}\r\n                <strong className=\"text-danger\">Food2Fork</strong>\r\n              </h1>\r\n              <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"search\" className=\"text-capitalize\">\r\n                  type recipes seperated by comma\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    placeholder=\"chicken, onion, carrot\"\r\n                    className=\"form-control\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"input-group-text bg-primary text-white\"\r\n                    >\r\n                      <i className=\"fas fa-search\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport RecipeSearch from \"./RecipeSearch\";\r\n\r\nexport default class RecipeList extends Component {\r\n  render() {\r\n    const { recipes, handleDetails, handleChange, handleSubmit, value, error } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <RecipeSearch handleChange={handleChange}\r\n                      handleSubmit={handleSubmit}\r\n                      value={value} />\r\n        <div className=\"container my-5\">\r\n          {/* title */}\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\">\r\n              <h1 className=\"text-slanted\">recipe list</h1>\r\n            </div>\r\n          </div>\r\n          {/* end of the title */}\r\n          <div className=\"row\">\r\n            {error? <h1 className=\"text-danger text-center\">{error}</h1> : \r\n            (recipes.map(recipe => (\r\n              <Recipe\r\n                key={recipe.recipe_id}\r\n                recipe={recipe}\r\n                handleDetails={handleDetails}\r\n              />\r\n            ))\r\n            )\r\n            }\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { recipes } from \"./tempList\";\nimport RecipeDetails from \"./components/RecipeDetails\";\nimport RecipeList from \"./components/RecipeList\";\n\nclass App extends Component {\n  state = {\n    recipes: recipes,\n    url:\n      \"https://www.food2fork.com/api/search?key=f0e5a65f8013a6dd9139e7b0037969fa\",\n    base_url:\n      \"https://www.food2fork.com/api/search?key=f0e5a65f8013a6dd9139e7b0037969fa\",\n    details_id: \"\",\n    pageIndex: 1,\n    search: \"\",\n    query: \"&q=\",\n    error: \"\"\n  };\n\n  async getRecipes() {\n    try {\n      const data = await fetch(this.state.url);\n      const jsonData = await data.json();\n      console.log(jsonData);\n      if(jsonData.recipes.length === 0) {\n        this.setState(() => {\n          return {error: \"Sorry, but your search did not return any result!\"}\n        })\n      } else { \n        this.setState(() => {\n          return {recipes: jsonData.recipes}  \n        })\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n    componentDidMount() {\n      this.getRecipes();\n    }\n  displayPage = index => {\n    switch (index) {\n      default:\n      case 1:\n        return (\n          <RecipeList\n            recipes={this.state.recipes}\n            handleDetails={this.handleDetails}\n            value={this.state.search}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            error={this.state.error}\n          />\n        );\n      case 0:\n        return (\n          <RecipeDetails\n            id={this.state.details_id}\n            handleIndex={this.handleIndex}\n          />\n        );\n    }\n  };\n  handleIndex = index => {\n    this.setState({\n      pageIndex: index\n    });\n  };\n  handleDetails = (index, id) => {\n    this.setState({\n      pageIndex: index,\n      details_id: id\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      search: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { base_url, query, search } = this.state;\n\n    this.setState(\n      () => {\n        return { url: `${base_url}${query}${search}`, search: \"\" };\n      },\n      () => {\n        this.getRecipes();\n      }\n    );\n  };\n  render() {\n    return (\n      <React.Fragment>{this.displayPage(this.state.pageIndex)}</React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}